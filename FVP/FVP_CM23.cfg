# Model version: 11.26.11
# Remarks: 
# 1) For Cortex-M23 you have to specify the fvp_mps2.platform_type according to the used device. In current case we use an IoT device.
# 2) An automatic simulation shutdown has been configured when a EOT (ASCII 4) char is transmitted.
#
# Parameters:
# instance.parameter=value       #(type, mode) default = 'def value' : description : [min..max]
#----------------------------------------------------------------------------------------------

fvp_mps2.mps2_timer0.clk_div.div=1                    # (int   , init-time) default = '0x1'    : Clock Rate Divider. This parameter is not exposed via CADI and can only be set in LISA
fvp_mps2.mps2_timer0.clk_div.mul=1                    # (int   , init-time) default = '0x1'    : Clock Rate Multiplier. This parameter is not exposed via CADI and can only be set in LISA
fvp_mps2.mps2_timer1.clk_div.div=1                    # (int   , init-time) default = '0x1'    : Clock Rate Divider. This parameter is not exposed via CADI and can only be set in LISA
fvp_mps2.mps2_timer1.clk_div.mul=1                    # (int   , init-time) default = '0x1'    : Clock Rate Multiplier. This parameter is not exposed via CADI and can only be set in LISA

fvp_mps2.mps2_visualisation.disable-visualisation=0   # (bool  , init-time) default = '0'      : Enable/disable visualisation
fvp_mps2.mps2_visualisation.idler.has_gui=1           # (bool  , init-time) default = '1'      : GUI is enabled
fvp_mps2.mps2_visualisation.rate_limit-enable=1       # (bool  , init-time) default = '0'      : Rate limit simulation.
fvp_mps2.mps2_visualisation.idler.delay_ms=50         # (int   , init-time) default = '0x32'   : Determines the period, in milliseconds of real time, between gui_callback() calls.
fvp_mps2.mps2_visualisation.window_title=CLCD %cpu%   # (string, init-time) default = 'CLCD %cpu%' : Window title (%cpu% is replaced by cpu_name)

fvp_mps2.platform_type=1                              # (int   , init-time) default = '0x0'    : 0:Original MPS2 ; 1:IoT Kit (cut-down SSE-200) ; 2:Full SSE-200; 3:SVOS; 4:msniper

fvp_mps2.UART0.clk_divider.div=1                      # (int   , init-time) default = '0x1'    : Clock Rate Divider. This parameter is not exposed via CADI and can only be set in LISA
fvp_mps2.UART0.clk_divider.mul=1                      # (int   , init-time) default = '0x1'    : Clock Rate Multiplier. This parameter is not exposed via CADI and can only be set in LISA
fvp_mps2.UART0.in_file=                               # (string, init-time) default = ''       : Input file for data to be read by the UART
fvp_mps2.UART0.in_file_escape_sequence=##             # (string, init-time) default = '##'     : Input file escape sequence
fvp_mps2.UART0.out_file=                              # (string, init-time) default = ''       : Output file to hold data written by the UART (use '-' to send all output to stdout)
fvp_mps2.UART0.rx_overrun_mode=2                      # (int   , init-time) default = '0x2'    : Block receive on RX_OVERRUN - 0:Never; 1:Before overrun; 2:After overrun
fvp_mps2.UART0.shutdown_on_eot=0                      # (bool  , init-time) default = '0'      : Shutdown simulation when a EOT (ASCII 4) char is transmitted (useful for regression tests when semihosting is not available)
fvp_mps2.UART0.shutdown_tag=                          # (string, run-time ) default = ''       : Shutdown simulation when a string is transmitted
fvp_mps2.UART0.unbuffered_output=1                    # (bool  , init-time) default = '0'      : Unbuffered output

cpu0.semihosting-enable=0                             # (bool  , init-time) default = '1'      : Enable semihosting SVC traps. Applications that do not use semihosting must set this parameter to false.
cpu0.semihosting-Thumb_SVC=0xAB                       # (int   , init-time) default = '0xab'   : T32 SVC number for semihosting
cpu0.semihosting-cmd_line=                            # (string, init-time) default = ''       : Command line available to semihosting SVC calls
cpu0.semihosting-heap_base=0                          # (int   , init-time) default = '0x0'    : Virtual address of heap base
cpu0.semihosting-heap_limit=0x0                       # (int   , init-time) default = '0x20700000' : Virtual address of top of heap
cpu0.semihosting-stack_base=0x0                       # (int   , init-time) default = '0x20800000' : Virtual address of base of descending stack
cpu0.semihosting-stack_limit=0x0                      # (int   , init-time) default = '0x20700000' : Virtual address of stack limit
cpu0.semihosting-cwd=                                 # (string, init-time) default = ''       : Base directory for semihosting file access.

fvp_mps2.telnetterminal0.mode=telnet                  # (string, init-time) default = 'telnet' : Terminal initialisation mode
fvp_mps2.telnetterminal0.quiet=1                      # (bool  , init-time) default = '0'      : Avoid output on stdout/stderr
fvp_mps2.telnetterminal0.start_port=5000              # (int   , init-time) default = '0x1388' : Telnet TCP Port Number
fvp_mps2.telnetterminal0.start_telnet=1               # (bool  , init-time) default = '1'      : Start telnet if nothing connected
fvp_mps2.telnetterminal0.terminal_command=            # (string, init-time) default = ''       : Commandline to launch a terminal application and connect to the opened TCP port. Keywords %port and %title will be replaced with the opened port number and component name respectively. An empty string (default behaviour) will launch xterm (Linux) or telnet.exe (Windows)

fvp_mps2.UART0.shutdown_on_eot=1                      # (bool  , init-time) default = '0'      : Shutdown simulation when a EOT (ASCII 4) char is transmitted (useful for regression tests when semihosting is not available)

#----------------------------------------------------------------------------------------------