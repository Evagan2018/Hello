name: Hello example workflow. 1 job for install, build, and execute. 

on:
  workflow_dispatch:

  pull_request:
    branches: [main]
    paths:
      - ./**

  push:
    branches: [main]
    paths:    
      - ./**

  schedule:
    - cron: '00 22 * * 0'

jobs:
    install_build_execute:

      runs-on: ubuntu-latest
  
      strategy:
        matrix:
  
          compiler: [ 
            {name: AC6,  ext: axf},
            {name: GCC,  ext: elf}
          ]

          target: [
           # {type: CM0,              model: FVP_MPS2_Cortex-M0,      instance: fvp_mps2.UART0},
           # {type: CM0plus,          model: FVP_MPS2_Cortex-M0plus,  instance: fvp_mps2.UART0}, 
           # {type: CM3,              model: FVP_MPS2_Cortex-M3,      instance: fvp_mps2.UART0}, 
           # {type: CM4,              model: FVP_MPS2_Cortex-M4,      instance: fvp_mps2.UART0}, 
           # {type: CM4_FP,           model: FVP_MPS2_Cortex-M4,      instance: fvp_mps2.UART0}, 
            {type: CM7,              model: FVP_MPS2_Cortex-M7,      instance: fvp_mps2.UART0}, 
           # {type: CM7_SP,           model: FVP_MPS2_Cortex-M7,      instance: fvp_mps2.UART0}, 
           # {type: CM7_DP,           model: FVP_MPS2_Cortex-M7,      instance: fvp_mps2.UART0}, 
           # {type: CM23,             model: FVP_MPS2_Cortex-M23,     instance: fvp_mps2.UART0}, 
           # {type: CM33,             model: FVP_MPS2_Cortex-M33,     instance: fvp_mps2.UART0}, 
           # {type: CM33_FP,          model: FVP_MPS2_Cortex-M33,     instance: fvp_mps2.UART0}, 
            {type: CS300,            model: FVP_Corstone_SSE-300,    instance: mps3_board.uart0},
            {type: CS310,            model: FVP_Corstone_SSE-310,    instance: mps3_board.uart0},
            {type: CS315,            model: FVP_Corstone_SSE-315,    instance: mps4_board.uart0} 

          ]

          build: [ 
            {type: Release},
            {type: Debug}
          ]

        max-parallel: 1

      steps:

        # ----------------------------------------------------------------
        # Setup required toolchains and license
        # ----------------------------------------------------------------

        # https://github.com/actions/checkout
        - name: Checkout
          uses: actions/checkout@v4

        # https://github.com/actions/setup-python
        - name: Setup Python
          uses: actions/setup-python@v5
          with:
            python-version: '3.9'

        # https://github.com/ARM-software/cmsis-actions
        - name: Activate vcpkg
          uses: ARM-software/cmsis-actions/vcpkg@v1

        # https://github.com/ARM-software/cmsis-actions
        - name: Activate Arm tool license
          uses: ARM-software/cmsis-actions/armlm@v1

        # Experimental: caching packs
        # https://docs.github.com/en/actions/using-workflows/caching-dependencies-to-speed-up-workflows
        - name: Cache packs
          uses: actions/cache@v4
          with:
            key: packs-${{ github.run_id }}-${{ matrix.target.type }}
            restore-keys: |
                packs-
            path: /home/runner/.cache/arm/packs

        # Experimental: caching RTE folder
        # https://docs.github.com/en/actions/using-workflows/caching-dependencies-to-speed-up-workflows
        - name: Cache RTE
          uses: actions/cache@v4
          with:
            key: rte-${{ github.run_id }}-${{ matrix.target.type }}
            restore-keys: |
                rte-
            path: /home/runner/work/Hello/Hello/RTE

        # https://docs.github.com/en/actions/using-workflows/caching-dependencies-to-speed-up-workflows
        - name: Cache FVP
          uses: actions/cache@v4
          with:
            key: fvp-${{ github.run_id }}-${{ matrix.target.type }}
            restore-keys: |
                fvp-
            path: /home/runner/work/Hello/Hello/FVP

        # ----------------------------------------------------------------
        # Build executable for a specific target compiler pair
        # ----------------------------------------------------------------
        - name: Build executable
          working-directory: ./

          # Remark regarding the build log redirection (tee command). Do not redirect the build log to the ./out/Hello/ folder.
          # This folder is currently used by the cbuild process. Access operations to this folder during the build operations will throws errors.
          # The build process creates in ./out/Hello/ the following subdirectory structure:  /target_type/build_type/compiler_name/

          run: |
              cbuild Hello.csolution.yml --update-rte --packs --context \
                  Hello.${{ matrix.build.type }}+${{ matrix.target.type }} \
                  --toolchain ${{ matrix.compiler.name }} -r


        # ----------------------------------------------------------------
        # Execute the previous generated context on a model
        # ----------------------------------------------------------------
        - name: Execute context ${{ matrix.target.type }}_${{ matrix.compiler.name }}_${{ matrix.build.type }} on ${{ matrix.target.model }}
          working-directory: ./         
          run: |

              echo " Tree before simulation "
              tree ./out/Hello/

              ${{ matrix.target.model }} \
                 -a ./out/Hello/${{ matrix.target.type }}/${{ matrix.build.type }}/${{ matrix.compiler.name }}/Hello.${{ matrix.compiler.ext }} \
                 -f ./FVP/${{ matrix.target.model }}.cfg \
                 -C ${{ matrix.target.instance }}.out_file=./out/Hello/${{ matrix.target.type }}/${{ matrix.build.type }}/${{ matrix.compiler.name }}/fvp_stdout.log \
                 --simlimit 60 --stat

              echo " Show simulation output"
              cat  ./out/Hello/${{ matrix.target.type }}/${{ matrix.build.type }}/${{ matrix.compiler.name }}/fvp_stdout.log

              echo "Checking simulation..."
              if [ "$(grep -c "Hello World 101" ./out/Hello/${{ matrix.target.type }}/${{ matrix.build.type }}/${{ matrix.compiler.name }}/fvp_stdout.log)" -eq 1 ]
              then 
                   return 0
              else 
                   return 1
              fi
